<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
  <title>Space</title>
  <link rel=stylesheet type="text/css" href="/css/css_style.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="/js/peer.js"></script>

</head>


<body>

<script>

  //var peer = new Peer(['<%= my_id %>'], {host: 'peerjserver.herokuapp.com', port: 443, secure: true, debug: 3});
  //var peer = new Peer(['<%= my_id %>'], {key: '9zqr9jbhn0mmfgvi', debug: 3});
  var peer = new Peer({host: '/', port: 7000, path: '/api',secure: true, debug: 3});
  var dest_peer_id = '<%= destinated_id %>';

  peer.on('open', function(id) {

    console.log('My peer ID is: ' + id);

  });


  if(<%= host %>)
  {
    var conn = peer.connect(dest_peer_id);

    conn.on('data', function(data) {
      console.log('Received', data);
    });

    $(document).ready(function(){
      $("#send_data").off().click(function () {
        conn.send(document.getElementById("data").value);
      });
    });


    //check if the destinate peer close the session
    setTimeout(function () {
      setInterval(function () {
        if(conn.open == false)
        {
          peer.destroy();
        }
      },3000);
    },5000);

  }


  peer.on('connection', function(conn) {

    dest_peer_id = conn.peer;

    conn.on('data', function(data) {
        console.log('Received', data);
    });

    $("#send_data").off().click(function () {
      conn.send(document.getElementById("data").value);
    });

    //check if the destinate peer close the session then clear own user data by peer.destroy
    setTimeout(function () {
      setInterval(function () {
        if(conn.open == false)
        {
          peer.destroy();
        }
      },3000);
    },5000);

  });

  peer.on('close', function() {
      //alert("close");
      //because this case user is forced to close session, so post user data to /index and delete user data from db
    /*
      $.ajax({
        type: 'POST',
        url: '/games/clear',
        data: {
          my_peer_id: '<%= my_id %>',
          destinated_peer_id: dest_peer_id
        },
        success: function (msg) {
          //post to games page and redirect and hold to be connect at games page
          console.log("clear back msg " + msg);
          document.getElementById("name").value = msg.name;
          document.getElementById("age").value = msg.age;
          document.getElementById("hobbies").value = msg.hobbies;
          document.getElementById("gender").value = msg.gender;
          document.getElementById("sexual").value = msg.sexual;
          $("#move_back_form").submit();
        },
        error:function(xhr, ajaxOptions, thrownError){
          alert("clear "+xhr.status);
          alert("clear "+thrownError);
        }
      });
    */

    $.ajax({
      type: 'POST',
      url: '/games/clear',
      data: {
        my_peer_id: '<%= my_id %>',
      },
      success: function (msg) {
        //post to games page and redirect and hold to be connect at games page
        console.log("clear back msg " + msg);
        document.getElementById("name").value = msg.name;
        document.getElementById("age").value = msg.age;
        document.getElementById("hobbies").value = msg.hobbies;
        document.getElementById("gender").value = msg.gender;
        document.getElementById("sexual").value = msg.sexual;
        $("#move_back_form").submit();
      },
      error:function(xhr, ajaxOptions, thrownError){
        alert("clear "+xhr.status);
        alert("clear "+thrownError);
      }
    });

  });

  peer.on('error', function(err) {
    alert("error");

  });



  $(document).ready(function () {
    //if the someone cancel the session
    var cancel_peer_id;

    $("#leave_room").off().click(function(){
        //update UI

        //when user click leaver, clear own data from db and move back to index page with their own data
        peer.destroy();
    });
  });



  //be fired when someone close the web page
  window.onunload = function () {
    peer.destroy();
  }




</script>



<script>


  peer.on('call', function(incoming) {

    //fetching call
    navigator.getUserMedia =  navigator.getUserMedia ||
      navigator.webkitGetUserMedia ||
      navigator.mozGetUserMedia ||
      navigator.msGetUserMedia;


      navigator.getUserMedia({
          audio: true, video: false
      }, function(stream) {
        //replay local audio stream to destinate
        // Answer the call, providing our mediaStream
        incoming.answer(stream);
      }, function(error){
        console.log(error);
        alert('An error occured. Please try again');
      });


    incoming.on('stream', function(stream){

      //get call setting
      var audio = document.getElementById('peer_call');
      var audio_url = window.URL || window.webKitURL || window.mozURL;

      audio.src = audio_url.createObjectURL(stream);
      audio.play();

    });

  });





  $(document).ready(function () {

    $("#call").off().click(function(){



      //fetching call
      navigator.getUserMedia =  (navigator.getUserMedia ||
        navigator.webkitGetUserMedia ||
        navigator.mozGetUserMedia ||
        navigator.msGetUserMedia);


      navigator.getUserMedia({
        audio: true, video: false
      }, function(stream) {
        //replay local audio stream to destinate
        // Answer the call, providing our mediaStream
        var call = peer.call(dest_peer_id, stream);

        call.on('stream', function(stream) {
          // `stream` is the MediaStream of the remote peer.

          //get call setting
          var audio = document.getElementById('peer_call');
          var audio_url = window.URL || window.webKitURL || window.mozURL;

          audio.src = audio_url.createObjectURL(stream);
          audio.play();
        });
      }, function(error){
        console.log(error);
        alert('An error occured. Please try again');
      });


    });

  });



</script>

<!-- the form is for send data to games page -->
<form id = "move_back_form" action='/' method="POST">
  <input type="hidden" id="name" name="name" type="text" value=" ">
  <input type="hidden" id="age" name="age" type="text" value=" ">
  <input type="hidden" id="hobbies" name="hobbies" type="text" value=" ">
  <input type="hidden" id="gender" name="gender" type="text" value=" ">
  <input type="hidden" id="sexual" name="sexual" type="text" value=" ">
</form>





<div class="container">

  <header>

    <div class="header">

    </div>

    <div class="footer">
      <p class="footstyle">&copy; 2016 All Right Reserved. </p>
    </div>

  </header>


  <div class="sidebody">

    <input id="data" name="data" type="text">
    <button id="send_data" name="send_data"> Send </button> <br>

    <audio id="peer_call" name="peer_call" controls=" "> </audio>
    <button id="call" name="call"> Call </button>


    <button id="leave_room" name="leave_room"> Close </button>
  </div>


</div>


</body>
</html>
